{"version":3,"sources":["config/theme-builder.ts","config/colormaps.ts","config/form-fields.ts","components/DynamicForm/RatingView/RatingView.tsx","components/DynamicForm/DynamicForm.tsx","Workspace/Controls.tsx","Workspace/DataView.tsx","Workspace/Workspace.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ogdBlue","ColorMap","params","_name","_stops","_colorSpace","_domain","this","name","stops","colorSpace","domain","value","lo","Math","min","hi","max","val","chroma","mode","hex","count","colors","Grayscale","TrafficLight","RedBlue","Flag","Blurple","Jet","Rainbow","ColorMaps","FormFields","Residential","id","label","type","order","description","maxValue","style","colorMap","Commercial","ratingCount","ratingMax","wasabiEndpoint","require","Endpoint","useStyles","makeStyles","theme","clickable","cursor","marginRight","spacing","icon","wrapper","display","justifyContent","alignItems","empty","color","filled","palette","primary","main","RatingView","props","classes","useState","ratings","setRatings","handleRatingClick","e","onRatingClick","useEffect","ratingNodes","i","push","emptyStar","filledStar","className","onClick","size","index","findIndex","x","Button","variant","disableRipple","disableFocusRipple","background","getColor","faCheck","opacity","IconButton","onNotesClick","faComment","onPhotoClick","faCamera","accept","capture","onChange","f","fileName","console","log","S3","endpoint","region","accessKeyId","secretAccessKey","putObject","Body","Bucket","Key","err","data","handleChange","target","files","root","position","width","padding","clickShield","top","left","right","bottom","height","zIndex","divider","margin","formButton","textField","formRow","marginTop","flexDirection","header","bold","fontWeight","DynamicForm","notatedFields","setNotatedFields","prop","formField","onUpdate","renderRating","flds","filter","handleNotesClick","handlePhotoClick","renderField","TextField","multiline","key","renderTextField","renderCommentField","includes","comments","join","formFields","field","hasOwnProperty","map","readonly","Grid","container","title","Divider","onSubmit","onClear","button","marginBottom","Controls","Typography","Select","onFormChange","currentForm","Object","keys","MenuItem","overflowY","datasection","whiteSpace","DataView","JSON","stringify","flexWrap","controls","maxWidth","minWidth","flexGrow","backgroundColor","border","dynamicForm","overflowX","Workspace","setCurrentForm","formData","setFormData","idx","formName","App","React","useMemo","createMuiTheme","shadows","Array","fill","MuiList","disablePadding","MuiButtonBase","secondary","warning","contrastThreshold","tonalOffset","CssBaseline","overflow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad6a4784.chunk.js","sourcesContent":["import { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Shadows } from '@material-ui/core/styles/shadows';\r\n\r\nconst ogdBlue = '#0086D6';\r\n\r\nexport default function ThemeBuilder() {\r\n\r\n  return React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        // Disable all box-shadows\r\n        shadows: Array(25).fill('none') as Shadows,\r\n\r\n        props: {\r\n          MuiList: {\r\n            disablePadding: true,\r\n          },\r\n          // Disable ripple effect\r\n          MuiButtonBase: {\r\n            color: 'inherit',\r\n            // disableRipple: true\r\n          },\r\n        },\r\n\r\n        palette: {\r\n          type: 'light',\r\n          primary: {\r\n            // light: will be calculated from palette.primary.main,\r\n            main: ogdBlue,\r\n            // dark: will be calculated from palette.primary.main,\r\n            // contrastText: will be calculated to contrast with palette.primary.main,\r\n          },\r\n          secondary: {\r\n            // light: will be calculated from palette.primary.main,\r\n            main: ogdBlue,\r\n            // dark: will be calculated from palette.primary.main,\r\n            // contrastText: will be calculated to contrast with palette.primary.main,\r\n          },\r\n          warning: {\r\n            // light: will be calculated from palette.primary.main,\r\n            main: '#d50000',\r\n            // dark: will be calculated from palette.primary.main,\r\n            // contrastText: will be calculated to contrast with palette.primary.main,\r\n          },\r\n          contrastThreshold: 3,\r\n          tonalOffset: 0.2,\r\n        },\r\n\r\n      }),\r\n    [  ]\r\n  );\r\n}\r\n","import * as chroma from 'chroma-js';\r\nimport { InterpolationMode } from 'chroma-js';\r\n\r\n/**\r\n * Convenience class for creating color maps.\r\n */\r\nclass ColorMap {\r\n\r\n  static Grayscale = new ColorMap({\r\n    stops: [ '#ffffff', '#000000' ],\r\n    name: 'Grayscale',\r\n  });\r\n\r\n  static TrafficLight = new ColorMap({\r\n    stops: [ '#ff0000', '#ffff00', '#00ff00' ],\r\n    name: 'Traffic Light',\r\n  });\r\n\r\n  static RedBlue = new ColorMap({\r\n    stops: [ '#ff0000', '#0000ff' ],\r\n    name: 'Red-Blue',\r\n  });\r\n\r\n  static Flag = new ColorMap({\r\n    stops: [ '#ff0000', '#ffffff', '#0000ff' ],\r\n    name: 'Flag',\r\n  });\r\n\r\n  static Blurple = new ColorMap({\r\n    stops: [ '#d732d7', '#587aee' ],\r\n    name: 'Blurple',\r\n  });\r\n\r\n  static Jet = new ColorMap({\r\n    stops: [ '#0024ae', '#0088d0', '#00ff00', '#ffff00', '#d732d7', '#d50000' ],\r\n    name: 'Jet',\r\n  });\r\n\r\n  static Rainbow = new ColorMap({\r\n    stops: [ '#ff0000', '#ffa500', '#ffff00', '#00ff00', '#0000ff', '#d42dd4' ],\r\n    name: 'Rainbow',\r\n  });\r\n\r\n  private _name: string = '';\r\n\r\n  private _stops: string[] = [];\r\n\r\n  private _colorSpace: InterpolationMode = 'rgb';\r\n\r\n  private _domain: number[] = [ 0, 1 ];\r\n\r\n  private constructor(params: { stops: string[], colorSpace?: InterpolationMode, domain?: number[], name?: string }) {\r\n    this._name = params.name ? params.name : this._name;\r\n    this._stops = params.stops ? params.stops : this._stops;\r\n    this._colorSpace = params.colorSpace ? params.colorSpace : this._colorSpace;\r\n    this._domain = params.domain ? params.domain : this._domain;\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  set name(name: string) {\r\n    this._name = name;\r\n  }\r\n\r\n  get domain(): number[] {\r\n    return this._domain;\r\n  }\r\n\r\n  set domain(domain: number[]) {\r\n    this._domain = domain;\r\n  }\r\n\r\n  get stops(): string[] {\r\n    return this._stops;\r\n  }\r\n\r\n  set stops(stops: string[]) {\r\n    this._stops = stops;\r\n  }\r\n\r\n  get colorSpace(): InterpolationMode {\r\n    return this._colorSpace;\r\n  }\r\n\r\n  set colorSpace(colorSpace: InterpolationMode) {\r\n    this._colorSpace = colorSpace;\r\n  }\r\n\r\n  getColor(value: number): string {\r\n    const lo = Math.min(...this.domain);\r\n    const hi = Math.max(...this.domain);\r\n    const val = Math.min(hi, Math.max(lo, value));\r\n\r\n    return chroma.scale(this._stops)\r\n                 .domain(this._domain)\r\n                 .mode(this._colorSpace)(val)\r\n                 .hex();\r\n  }\r\n\r\n  getColorArray(count: number): string[] {\r\n    return chroma.scale(this._stops)\r\n                 .domain(this._domain)\r\n                 .mode(this._colorSpace)\r\n                 .colors(count);\r\n  }\r\n\r\n}\r\n\r\nexport const ColorMaps = [\r\n  ColorMap.Grayscale,\r\n  ColorMap.TrafficLight,\r\n  ColorMap.Blurple,\r\n  ColorMap.Flag,\r\n  ColorMap.Jet,\r\n  ColorMap.Rainbow,\r\n  ColorMap.RedBlue\r\n];\r\n","// Exported from our form builder.\r\nexport const FormFields = {\r\n  Residential: [ {\r\n    id: 'PDFeapAH3bHu2jBxLqfMe',\r\n    label: 'Door Tag',\r\n    type: 'photo',\r\n    order: 0,\r\n    description: 'Picture of sticker and job number'\r\n  }, {\r\n    id: 'fjiJYejf4bVqvUoeTlc1l',\r\n    label: 'Panels',\r\n    type: 'rating',\r\n    order: 1,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: '0Djg1ZT5MFtC5Wf9pNKE2',\r\n    label: 'Hinges',\r\n    type: 'rating',\r\n    order: 2,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: 'zZo1x0NmPU4kGIoEZ9Idt',\r\n    label: 'Rollers',\r\n    type: 'rating',\r\n    order: 3,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: '8aaFdAsvfMJ7uFeqXKJSu',\r\n    label: 'Cables',\r\n    type: 'rating',\r\n    order: 4,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: 'Yr5ag5dUUlJ4ZTW1BCBxo',\r\n    label: 'Bearings',\r\n    type: 'rating',\r\n    order: 5,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: '4YiS73KiOim6gfD0Lcid5',\r\n    label: 'Top Fixtures',\r\n    type: 'rating',\r\n    order: 6,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: 'rn8akyQsXLz-kQMFLhWVg',\r\n    label: 'Bottom Fixtures',\r\n    type: 'rating',\r\n    order: 7,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: 'qk49tb-OV5yRRKbm7Vxj8',\r\n    label: 'Springs',\r\n    type: 'rating',\r\n    order: 8,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: 'EqQNdzf9Tjh2XSk-fUFMZ',\r\n    label: 'Bottom Seal',\r\n    type: 'rating',\r\n    order: 9,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: 'MFn6RZGiYdNakC2P1Y9p7',\r\n    label: 'Perimeter Seal',\r\n    type: 'rating',\r\n    order: 10,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: 'pfSxyDWAXqRy9Wm4yugrJ',\r\n    label: 'Motor',\r\n    type: 'rating',\r\n    order: 11,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: 'BLqF8JjA378OCZriM3fA_',\r\n    label: 'Belt / Chain',\r\n    type: 'rating',\r\n    order: 12,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: 's3SiryVYng5J9ivU1kcwL',\r\n    label: 'Gear & Sprocket / Coupler',\r\n    type: 'rating',\r\n    order: 13,\r\n    maxValue: 3,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light'\r\n  }, {\r\n    id: 'ubHHfQ5qg3X-sKmBYGllu',\r\n    label: 'Door Measurement',\r\n    type: 'textField',\r\n    order: 14,\r\n    description: 'Measure all doors on site and include measurements here.'\r\n  } ],\r\n  Commercial: [ {\r\n    id: 'OSb7hUAmN7-Gn-jIAW1_4',\r\n    label: 'Picture of Doors / Dock Equipment / Motor on Arrival',\r\n    type: 'photo',\r\n    order: 6,\r\n    description: 'Take picture of whatever you\\'re there to service / fix / replace / etc...'\r\n  }, {\r\n    id: 'YajcA2E-8BcDsZVKBo3HQ',\r\n    label: 'Cables',\r\n    type: 'rating',\r\n    order: 0,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light',\r\n    description: 'Cable Quality',\r\n    ratingCount: '3',\r\n    ratingMax: '2',\r\n    maxValue: 3\r\n  }, {\r\n    id: 'jZ3v1FXX0PY-IJfGs81d3',\r\n    label: 'Springs',\r\n    type: 'rating',\r\n    order: 1,\r\n    style: 'colors',\r\n    colorMap: 'Traffic Light',\r\n    description: 'Measure both springs, broken or not.',\r\n    maxValue: 3\r\n  }, {\r\n    id: 'NFCcKG2NpogWCAVIwvQ0F',\r\n    label: 'Measure the door opening (jamb to jamb, floor to header)',\r\n    type: 'textField',\r\n    order: 2,\r\n    description: 'Width x Height'\r\n  }, {\r\n    id: 'DRToAyWTRi0TXMXTq-ujT',\r\n    label: 'Door Manufacturer / Model',\r\n    type: 'textField',\r\n    order: 3,\r\n    description: 'Who made this door, which model, there are stickers on the sides of panels.'\r\n  }, {\r\n    id: 'hpuMS-5oeksE3PD8ENjHN',\r\n    label: 'Motor Existing?',\r\n    type: 'textField',\r\n    order: 4,\r\n    description: 'If there is a motor, need to know manufacturer, horsepower, power requirements, there is a stamp on every motor that looks this way.'\r\n  }, {\r\n    id: '-EOH7wMsmPXdbIwhcXFHk',\r\n    label: 'Sticker with number',\r\n    type: 'photo',\r\n    order: 5,\r\n    description: 'Sticker with number. If there\\'s no sticker they deduct $20 so your choice.'\r\n  } ]\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { faStar as emptyStar } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCamera, faCheck, faComment, faStar as filledStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, IconButton, makeStyles, Theme } from '@material-ui/core';\r\nimport { ColorMaps } from '../../../config';\r\n\r\n\r\nimport S3 from 'aws-sdk/clients/s3';\r\nconst AWS = require('aws-sdk');\r\nconst wasabiEndpoint = new AWS.Endpoint('s3.us-east-1.wasabisys.com');\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  clickable: {\r\n    cursor: 'pointer',\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n    cursor: 'pointer',\r\n  },\r\n  wrapper: {\r\n    display: 'inline-flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center'\r\n  },\r\n  empty: {\r\n    color: 'transparent',\r\n  },\r\n  filled: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst RatingView = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [ratings, setRatings] = useState([] as any[]);\r\n\r\n  const handleRatingClick = (value: number) => (e) => {\r\n    if (props.onRatingClick) {\r\n      props.onRatingClick(value);\r\n    }\r\n  };\r\n\r\n  const handleNotesClick = () => {\r\n    if (props.onNotesClick) {\r\n      props.onNotesClick();\r\n    }\r\n  };\r\n\r\n  const handlePhotoClick = () => {\r\n    if (props.onPhotoClick) {\r\n      props.onPhotoClick();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const ratingNodes: React.ReactNode[] = [];\r\n\r\n    if (props.style === 'stars') {\r\n      for (let i = 1; i <= props.maxValue; i++) {\r\n        ratingNodes.push(\r\n          <FontAwesomeIcon key={props.id + '_' + i}\r\n            icon={props.value < i ? emptyStar : filledStar}\r\n            className={classes.clickable}\r\n            onClick={handleRatingClick(i)}\r\n            size='2x'\r\n          />,\r\n        );\r\n      }\r\n    }\r\n\r\n    if (props.style === 'colors') {\r\n      const index: number = ColorMaps.findIndex(x => x.name === props.colorMap);\r\n      for (let i = 1; i <= props.maxValue; i++) {\r\n        ratingNodes.push(\r\n          <Button variant=\"contained\"\r\n            className={classes.clickable}\r\n            disableRipple\r\n            disableFocusRipple\r\n            onClick={handleRatingClick(i)}\r\n            style={{ background: ColorMaps[index].getColor((i - 1) / (props.maxValue - 1)) }}>\r\n            <FontAwesomeIcon icon={faCheck}\r\n              style={{ opacity: props.value === i ? 1 : 0 }}\r\n            />\r\n          </Button>\r\n        );\r\n      }\r\n    }\r\n\r\n    setRatings(ratingNodes);\r\n  }, [props]);\r\n\r\n  const handleChange = (e) => {\r\n    var f = e[0];\r\n    var fileName = f.name;\r\n    console.log('e', e)\r\n    const s3 = new S3({\r\n      endpoint: wasabiEndpoint,\r\n      region: 'us-east-1',\r\n      accessKeyId: 'EM7EN26R9DZQ3MQFFFM7',\r\n      secretAccessKey: 'U8VJ2SCGu6BEStEJXeZvEaD2DCSSio0zuVPLhLyi',\r\n    });\r\n\r\n    s3.putObject({\r\n      Body: f,\r\n      Bucket: \"test-jamal-h\",\r\n      Key: fileName\r\n    }\r\n      , (err, data) => {\r\n        if (err) {\r\n          console.log(err);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {ratings}\r\n      <IconButton color=\"inherit\" onClick={() => { handleNotesClick() }}>\r\n        <FontAwesomeIcon icon={faComment} />\r\n      </IconButton>\r\n      <IconButton color=\"inherit\" onClick={() => { handlePhotoClick() }}>\r\n        <FontAwesomeIcon icon={faCamera} />\r\n      </IconButton>\r\n      <input type=\"file\" accept=\"image/*\" capture=\"camera\" onChange={(e) => { handleChange(e.target.files) }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingView;\r\n\r\n\r\n","import TextField from '@material-ui/core/TextField';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Divider, Grid, makeStyles, Theme } from '@material-ui/core';\r\nimport RatingView from './RatingView/RatingView';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ( {\r\n  root: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    display: 'block',\r\n    padding: theme.spacing(1),\r\n  },\r\n  clickShield: {\r\n    background: 'rgba(0 ,0, 0, 0.1)',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 999\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  formButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n  },\r\n  formRow: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  bold: {\r\n    fontWeight: 'bold'\r\n  }\r\n} ));\r\n\r\nconst DynamicForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [ notatedFields, setNotatedFields ] = useState([]);\r\n\r\n  const handleChange = (prop) => (e) => {\r\n    console.log(prop, e);\r\n  };\r\n\r\n  const renderTextField = (formField) => {\r\n    return (\r\n      <TextField variant='outlined'\r\n                 multiline\r\n                 className={ classes.textField }\r\n                 onChange={ handleChange(formField.key) }\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleRatingClick = (formField) => (value: string) => {\r\n    if (props.onUpdate) {\r\n      props.onUpdate({ ...formField, value });\r\n    }\r\n  };\r\n\r\n  const handleNotesClick = (formField) => {\r\n    let flds = [ ...notatedFields ];\r\n    const idx = flds.findIndex(x => x === formField.id);\r\n    if (idx < 0) {\r\n      flds.push(formField.id);\r\n    } else {\r\n      flds = flds.filter(x => x !== formField.id);\r\n    }\r\n    setNotatedFields([ ...flds ]);\r\n  };\r\n\r\n  // TODO\r\n  const handlePhotoClick = (formField) => {\r\n    console.log('formField', formField);\r\n  };\r\n\r\n  const renderRating = (formField) => {\r\n    return (\r\n      <>\r\n        { ( formField.style === 'stars' || formField.style === 'colors' ) && (\r\n          <div className={ classes.formRow }>\r\n            <RatingView { ...formField }\r\n                        onRatingClick={ handleRatingClick(formField) }\r\n                        onNotesClick={ () => handleNotesClick(formField) }\r\n                        onPhotoClick={ () => handlePhotoClick(formField) }\r\n            />\r\n          </div>\r\n        ) }\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderCheckboxes = (formField) => {\r\n    return <></>;\r\n  };\r\n\r\n  const renderField = (formField) => {\r\n    switch (formField.type) {\r\n      case 'textField':\r\n        return renderTextField(formField);\r\n      case 'rating':\r\n        return renderRating(formField);\r\n      case 'checkboxes':\r\n        return renderCheckboxes(formField);\r\n    }\r\n  };\r\n\r\n  const renderCommentField = (formField) => {\r\n    if (notatedFields.includes(formField.id)) {\r\n      return <TextField variant=\"outlined\"\r\n                        key={ [ formField.id, 'notes' ].join('_') }\r\n                        size=\"small\"\r\n                        margin=\"dense\"\r\n                        onChange={ handleChange('comment') }\r\n                        value={ formField.comments }\r\n      />;\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (props.onSubmit) {\r\n      props.onSubmit();\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    if (props.onClear) {\r\n      props.onClear();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.formFields) {\r\n      setNotatedFields(props.formFields.filter(field => field.hasOwnProperty('notes')).map(field => field.id));\r\n    }\r\n  }, [ props ]);\r\n\r\n  return (\r\n    <div className={ classes.root }>\r\n      { props.readonly && <div className={ classes.clickShield }/> }\r\n      <Grid container>\r\n        <h2>{ props.title }</h2>\r\n        { props.formFields && props.formFields.map((formField, index) => (\r\n          <Grid container key={ index } className={ classes.formRow }>\r\n            <div className={ classes.bold }>{ formField.label }</div>\r\n            <div>{ formField.description }</div>\r\n            <div>{ renderField(formField) }</div>\r\n            <div>{ renderCommentField(formField) }</div>\r\n          </Grid>\r\n        ))\r\n        }\r\n      </Grid>\r\n      <Divider className={ classes.divider }/>\r\n      <Button className={ classes.formButton } variant='contained' onClick={ handleSubmit }\r\n              color='primary'>Submit</Button>\r\n      <Button className={ classes.formButton } variant='contained' onClick={ handleClear }\r\n              color='default'>Clear</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n","import { makeStyles, MenuItem, Select, Theme, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { FormFields } from '../config';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ( {\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  button: {\r\n    marginBottom: theme.spacing(1),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n} ));\r\n\r\nconst Controls = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const handleFormChange = (e) => {\r\n    if (props.onFormChange) {\r\n      props.onFormChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={ classes.root }>\r\n      <Typography variant=\"h6\">Controls</Typography>\r\n      <Select\r\n        onChange={ handleFormChange }\r\n        value={ props.currentForm }>\r\n        { Object.keys(FormFields).map(name => (\r\n          <MenuItem key={ name } value={ name }>{ name }</MenuItem>\r\n        )) }\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\nimport { makeStyles, Theme, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ( {\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: 'calc(100% - 100px)',\r\n    overflowY: 'scroll',\r\n  },\r\n  datasection: {\r\n    whiteSpace: 'pre-wrap',\r\n  },\r\n} ));\r\nconst DataView = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\">Form Data</Typography>\r\n      <div className={ classes.root }>\r\n        <pre className={ classes.datasection }>{ JSON.stringify(props.data, null, 2) }</pre>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataView;\r\n","import { Divider, makeStyles, Theme } from '@material-ui/core';\r\nimport DynamicForm from 'components/DynamicForm/DynamicForm';\r\nimport React, { useState } from 'react';\r\nimport Controls from './Controls';\r\nimport DataView from './DataView';\r\nimport { FormFields } from '../config';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ( {\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    flexWrap:'wrap',\r\n  },\r\n  controls: {\r\n    height: '100%',\r\n    maxWidth: '450px',\r\n    minWidth: '450px',\r\n    flexGrow: 1,\r\n    flexDirection: 'column',\r\n    backgroundColor: '#eee',\r\n    border: '1px solid ' + theme.palette.divider,\r\n    padding: theme.spacing(1),\r\n  },\r\n  dynamicForm: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    overflowX: 'hidden',\r\n    overflowY: 'scroll',\r\n  },\r\n} ));\r\n\r\nconst Workspace = () => {\r\n  const classes = useStyles();\r\n\r\n  const [ currentForm, setCurrentForm ] = useState<any>('Residential');\r\n  const [ formData, setFormData ] = useState<any[]>(FormFields[ currentForm ]);\r\n\r\n  const handleFormUpdate = (e) => {\r\n    const data = [ ...formData ];\r\n    const idx = data.findIndex(x => x.id === e.id);\r\n    if (idx >= 0) {\r\n      data[ idx ] = e;\r\n    }\r\n    setFormData(data);\r\n  };\r\n\r\n  const handleFormChange = (formName) => {\r\n    setCurrentForm(formName);\r\n    setFormData(FormFields[ formName ]);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setFormData([]);\r\n  };\r\n\r\n  return (\r\n    <div className={ classes.root }>\r\n      <div className={ classes.dynamicForm }>\r\n        <DynamicForm\r\n          formFields={ formData }\r\n          title={ currentForm }\r\n          onClear={ handleClear }\r\n          onUpdate={ handleFormUpdate }/>\r\n      </div>\r\n      <div className={ classes.controls }>\r\n        <Controls\r\n          currentForm={ currentForm }\r\n          onFormChange={ handleFormChange }/>\r\n        <Divider/>\r\n        <DataView data={ formData }/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","import React from 'react';\r\nimport { CssBaseline, MuiThemeProvider } from '@material-ui/core';\r\nimport Workspace from './Workspace/Workspace';\r\nimport ThemeBuilder from './config/theme-builder';\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={ThemeBuilder()}>\r\n      <CssBaseline />\r\n      <div\r\n        style={{\r\n          overflow: 'hidden',\r\n          height: '100%',\r\n          width: '100%',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          position: 'absolute',\r\n        }}\r\n      >\r\n        <Workspace />\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}